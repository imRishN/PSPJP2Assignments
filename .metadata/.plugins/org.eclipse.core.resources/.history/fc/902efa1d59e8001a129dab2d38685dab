package controllers;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import models.AverageIncome;
import models.Summary;

public class IncomeCalculator {

	public static final String fileLocation = "G:\\Publicis Sapient FTE\\PJP 2\\Week2\\Sample input file Assignment 3.xlsx";
	private static List<AverageIncome> incomeData;
	private static final double INR_USD = 1.0/66;
	private static final double GBP_USD = 1.0/0.67;
	private static final double SGP_USD = 1.0/1.5;
	private static final double HKD_USD = 1.0/8;
	private HashMap<String, String> map;
	
	public IncomeCalculator()
	{
		incomeData = DataReader.readXLSX(fileLocation);
		map = new HashMap<String, String>();
		convertIncomeToDollar();
		groupData();
	}
	
	private void convertIncomeToDollar()
	{
		for(AverageIncome data: incomeData)
		{
			if(data.getCurrency().equals("INR"))
			{
				data.setAverageIncome(Double.toString(Double.parseDouble(data.getAverageIncome())*INR_USD));
			}
			else if(data.getCurrency().equals("GBP"))
			{
				data.setAverageIncome(Double.toString(Double.parseDouble(data.getAverageIncome())*GBP_USD));
			}
			else if(data.getCurrency().equals("SGP"))
			{
				data.setAverageIncome(Double.toString(Double.parseDouble(data.getAverageIncome())*SGP_USD));
			}
			else if(data.getCurrency().equals("HKD"))
			{
				data.setAverageIncome(Double.toString(Double.parseDouble(data.getAverageIncome())*HKD_USD));
			}
			
			data.setCurrency("USD");
		}
	}
	
	private void groupData()
	{
		for(AverageIncome data: incomeData)
		{
			String key = (data.getCountry().isEmpty()? data.getCity():data.getCountry()) + "," + data.getGender();
			if(map.containsKey(key))
			{
				String[] value = map.get(key).split(",");// value0 is the average income till now and value1 is the counter;
				int currCount = Integer.parseInt(value[1]);
				double currTotalValue = (Double.parseDouble(value[0]) * currCount);
				double newTotalValue = currTotalValue + Double.parseDouble(data.getAverageIncome());
				String newValue = Double.toString(newTotalValue) + "," + Integer.toString(currCount+1);
				map.replace(key, newValue);
			}
			else
			{
				map.put(key, data.getAverageIncome()+",1");
			}
		}
	}
	
	public HashMap<String, String> getProcessedData()
	{
		List<Summary> summaries = new ArrayList<Summary>();
		return map;
	}

}
